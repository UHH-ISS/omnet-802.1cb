//
// Generated file, do not edit! Created by nedtool 5.5 from frer/FREREtherFrame.msg.
//

#ifndef __FRERETHERFRAME_M_H
#define __FRERETHERFRAME_M_H

#if defined(__clang__)
#  pragma clang diagnostic ignored "-Wreserved-id-macro"
#endif
#include <omnetpp.h>

// nedtool version check
#define MSGC_VERSION 0x0505
#if (MSGC_VERSION!=OMNETPP_VERSION)
#    error Version mismatch! Probably this file was generated by an earlier version of nedtool: 'make clean' should help.
#endif



// cplusplus {{
#include "core4inet/linklayer/ethernet/base/EtherFrameWithQTag_m.h"

using namespace CoRE4INET;
// }}

/**
 * Class generated from <tt>frer/FREREtherFrame.msg:28</tt> by nedtool.
 * <pre>
 * packet EthernetFrameFRER extends EthernetIIFrameWithQTag
 * {
 *     int sequenceNumber;
 * }
 * </pre>
 */
class EthernetFrameFRER : public ::EthernetIIFrameWithQTag
{
  protected:
    int sequenceNumber;

  private:
    void copy(const EthernetFrameFRER& other);

  protected:
    // protected and unimplemented operator==(), to prevent accidental usage
    bool operator==(const EthernetFrameFRER&);

  public:
    EthernetFrameFRER(const char *name=nullptr, short kind=0);
    EthernetFrameFRER(const EthernetFrameFRER& other);
    virtual ~EthernetFrameFRER();
    EthernetFrameFRER& operator=(const EthernetFrameFRER& other);
    virtual EthernetFrameFRER *dup() const override {return new EthernetFrameFRER(*this);}
    virtual void parsimPack(omnetpp::cCommBuffer *b) const override;
    virtual void parsimUnpack(omnetpp::cCommBuffer *b) override;

    // field getter/setter methods
    virtual int getSequenceNumber() const;
    virtual void setSequenceNumber(int sequenceNumber);
};

inline void doParsimPacking(omnetpp::cCommBuffer *b, const EthernetFrameFRER& obj) {obj.parsimPack(b);}
inline void doParsimUnpacking(omnetpp::cCommBuffer *b, EthernetFrameFRER& obj) {obj.parsimUnpack(b);}

/**
 * Class generated from <tt>frer/FREREtherFrame.msg:32</tt> by nedtool.
 * <pre>
 * packet ErrorDetectionFRER extends EthernetIIFrameWithQTag
 * {
 * }
 * </pre>
 */
class ErrorDetectionFRER : public ::EthernetIIFrameWithQTag
{
  protected:

  private:
    void copy(const ErrorDetectionFRER& other);

  protected:
    // protected and unimplemented operator==(), to prevent accidental usage
    bool operator==(const ErrorDetectionFRER&);

  public:
    ErrorDetectionFRER(const char *name=nullptr, short kind=0);
    ErrorDetectionFRER(const ErrorDetectionFRER& other);
    virtual ~ErrorDetectionFRER();
    ErrorDetectionFRER& operator=(const ErrorDetectionFRER& other);
    virtual ErrorDetectionFRER *dup() const override {return new ErrorDetectionFRER(*this);}
    virtual void parsimPack(omnetpp::cCommBuffer *b) const override;
    virtual void parsimUnpack(omnetpp::cCommBuffer *b) override;

    // field getter/setter methods
};

inline void doParsimPacking(omnetpp::cCommBuffer *b, const ErrorDetectionFRER& obj) {obj.parsimPack(b);}
inline void doParsimUnpacking(omnetpp::cCommBuffer *b, ErrorDetectionFRER& obj) {obj.parsimUnpack(b);}


#endif // ifndef __FRERETHERFRAME_M_H

