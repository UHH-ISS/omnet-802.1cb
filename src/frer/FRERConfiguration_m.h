//
// Generated file, do not edit! Created by nedtool 5.5 from frer/FRERConfiguration.msg.
//

#ifndef __FRERCONFIGURATION_M_H
#define __FRERCONFIGURATION_M_H

#if defined(__clang__)
#  pragma clang diagnostic ignored "-Wreserved-id-macro"
#endif
#include <omnetpp.h>

// nedtool version check
#define MSGC_VERSION 0x0505
#if (MSGC_VERSION!=OMNETPP_VERSION)
#    error Version mismatch! Probably this file was generated by an earlier version of nedtool: 'make clean' should help.
#endif



// cplusplus {{
#include "../utils/L2Identifier.h"
// }}

/**
 * Class generated from <tt>frer/FRERConfiguration.msg:22</tt> by nedtool.
 * <pre>
 * packet FRERConfiguration
 * {
 *     L2Identifier key;
 *     int knot;
 * }
 * </pre>
 */
class FRERConfiguration : public ::omnetpp::cPacket
{
  protected:
    L2Identifier key;
    int knot;

  private:
    void copy(const FRERConfiguration& other);

  protected:
    // protected and unimplemented operator==(), to prevent accidental usage
    bool operator==(const FRERConfiguration&);

  public:
    FRERConfiguration(const char *name=nullptr, short kind=0);
    FRERConfiguration(const FRERConfiguration& other);
    virtual ~FRERConfiguration();
    FRERConfiguration& operator=(const FRERConfiguration& other);
    virtual FRERConfiguration *dup() const override {return new FRERConfiguration(*this);}
    virtual void parsimPack(omnetpp::cCommBuffer *b) const override;
    virtual void parsimUnpack(omnetpp::cCommBuffer *b) override;

    // field getter/setter methods
    virtual L2Identifier& getKey();
    virtual const L2Identifier& getKey() const {return const_cast<FRERConfiguration*>(this)->getKey();}
    virtual void setKey(const L2Identifier& key);
    virtual int getKnot() const;
    virtual void setKnot(int knot);
};

inline void doParsimPacking(omnetpp::cCommBuffer *b, const FRERConfiguration& obj) {obj.parsimPack(b);}
inline void doParsimUnpacking(omnetpp::cCommBuffer *b, FRERConfiguration& obj) {obj.parsimUnpack(b);}


#endif // ifndef __FRERCONFIGURATION_M_H

